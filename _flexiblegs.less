// Flexible Grid System 5.2.0 | Less Plus | MIT License | flexible.gs

.wrap() {
  display: block;
  width: 100%;
  font-size: 0;
  text-align: left;
  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
  box-sizing: border-box;
  > * {
    display: inline-block;
    width: 100%;
    min-height: 1px;
    font-size: 1rem;
    vertical-align: middle;
    -webkit-box-sizing: border-box;
    -moz-box-sizing: border-box;
    box-sizing: border-box;
  }
}
.wrap(@col) when (@col = flexbox) {
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  -webkit-justify-content: flex-start;
  -ms-justify-content: flex-start;
  justify-content: flex-start;
  -webkit-align-content: center;
  -ms-align-content: center;
  align-content: center;
  -webkit-align-items: center;
  -ms-align-items: center;
  align-items: center;
}
.wrap(@col) when (@col = table) {
  display: table;
  table-layout: fixed;
  > * {
    display: table-cell;
  }
}
.wrap(@col) when (@col = not-table) {
  display: block;
  table-layout: auto;
  > * {
    display: inline-block;
  }
}
.wrap(@col) when (@col = auto) {
  > * {
    width: auto;
  }
}
.wrap(@col) when (isnumber(@col)) {
  > * {
    width: 100% / @col;
  }
}

.col(@col) when (@col = hidden) {
  overflow: hidden;
}
.col(@col) when (@col = not-hidden) {
  display: inline-block;
}
.col(@col, @row) when (isnumber(@col)) {
  width: 100% / @row * @col;
}

.gutter(@gutter) when (isnumber(@gutter)) {
  width: calc(~"100% +" @gutter + @gutter);
  margin-left: -@gutter / 2;
  margin-right: -@gutter / 2;
  padding-left: 0;
  padding-right: 0;
  > * {
    padding-left: @gutter / 2;
    padding-right: @gutter / 2;
  }
}
.gutter(@gutter, @outside) when (isnumber(@gutter)) and (@outside = outside) {
  width: 100%;
  margin-left: 0;
  margin-right: 0;
  padding-left: @gutter / 2;
  padding-right: @gutter / 2;
}

.align(@align) when (@align = top) {
  -webkit-align-items: flex-start;
  -ms-align-items: flex-start;
  align-items: flex-start;
  > * {
    vertical-align: top;
  }
}
.align(@align) when (@align = middle) {
  -webkit-align-items: center;
  -ms-align-items: center;
  align-items: center;
  > * {
    vertical-align: middle;
  }
}
.align(@align) when (@align = bottom) {
  -webkit-align-items: flex-end;
  -ms-align-items: flex-end;
  align-items: flex-end;
  > * {
    vertical-align: bottom;
  }
}
.align(@align) when (@align = between) {
  -webkit-justify-content: space-between;
  -ms-justify-content: space-between;
  justify-content: space-between;
  -webkit-align-content: space-between;
  -ms-align-content: space-between;
  align-content: space-between;
}
.align(@align) when (@align = around) {
  -webkit-justify-content: space-around;
  -ms-justify-content: space-around;
  justify-content: space-around;
  -webkit-align-content: space-around;
  -ms-align-content: space-around;
  align-content: space-around;
}
.align(@align) when (@align = baseline) {
  -webkit-align-items: baseline;
  -ms-align-items: baseline;
  align-items: baseline;
}
.align(@align) when (@align = center) {
  -webkit-justify-content: center;
  -ms-justify-content: center;
  justify-content: center;
  text-align: center;
}
.align(@align) when (@align = left) {
  -webkit-justify-content: flex-start;
  -ms-justify-content: flex-start;
  justify-content: flex-start;
  text-align: left;
}
.align(@align) when (@align = right) {
  -webkit-justify-content: flex-end;
  -ms-justify-content: flex-end;
  justify-content: flex-end;
  text-align: right;
}
.align(@align) when (@align = first) {
  -ms-flex-order: -1;
  -webkit-order: -1;
  order: -1;
}
.align(@align) when (@align = not-first) {
  -ms-flex-order: 0;
  -webkit-order: 0;
  order: 0;
}
.align(@align) when (@align = last) {
  -ms-flex-order: 1;
  -webkit-order: 1;
  order: 1;
}
.align(@align) when (@align = not-last) {
  -ms-flex-order: 0;
  -webkit-order: 0;
  order: 0;
}
.align(@align) when (@align = reverse) {
  -webkit-flex-direction: row-reverse;
  -ms-flex-direction: row-reverse;
  flex-direction: row-reverse;
  -webkit-flex-wrap: wrap-reverse;
  -ms-flex-wrap: wrap-reverse;
  flex-wrap: wrap-reverse;
}
.align(@align) when (@align = not-reverse) {
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
}

@breakpoint-lg: ~"(max-width: 1024px)";
@breakpoint-md: ~"(max-width: 768px)";
@breakpoint-sm: ~"(max-width: 667px)";
